  <!-- Footer -->
  <footer class="py-2 bg-dark">
    <div class="container">
      <p class="m-0 text-center text-white">Copyright &copy; TenjinLMS 2020</p>
    </div>
    <!-- /.container -->
  </footer>

  <!-- Bootstrap core JavaScript -->
  <script src="/vendor/jquery/jquery.min.js"></script>
  <script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  <!-- DOMPurify -->
  <script src="https://cdn.jsdelivr.net/npm/dompurify@2.0.17/dist/purify.min.js"></script>

  <script>
    // EasyMDE Instantiation with options
    var easyMDE = new EasyMDE({
      element: document.getElementById('inputDescription'),

      renderingConfig: {
        sanitizerFunction: function(renderedHTML) {
          return DOMPurify.sanitize(
            renderedHTML,
            { ALLOWED_TAGS: ['p', 'br', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'strong', 'em',
              'ul', 'ol', 'li', 'a', 'img'] }
          )
        }
      },

      toolbar: [
        "bold", "italic",
        {
          name: "heading",
          action: toggleHeading4,
          className: "fa fa-heading",
          title: "Heading",
        },
        "|", 'unordered-list', 'ordered-list', '|', 'link', "image", '|',
        'preview', 'side-by-side', 'fullscreen', '|', 'guide'
      ],
    })

    // custom EasyMDE button function (for h4's)
    function toggleHeading4(editor) {
      var cm = editor.codemirror;
      _toggleHeading(cm, undefined, 4);
    }

    // this function create various-sized "toggleHeading" button functions (found in EasyMDE's source)
    function _toggleHeading(cm, direction, size) {
      if (/editor-preview-active/.test(cm.getWrapperElement().lastChild.className)) return;

      var startPoint = cm.getCursor('start');
      var endPoint = cm.getCursor('end');
      for (var i = startPoint.line; i <= endPoint.line; i++) {
          (function (i) {
              var text = cm.getLine(i);
              var currHeadingLevel = text.search(/[^#]/);

              if (direction !== undefined) {
                  if (currHeadingLevel <= 0) {
                      if (direction == 'bigger') {
                          text = '###### ' + text;
                      } else {
                          text = '# ' + text;
                      }
                  } else if (currHeadingLevel == 6 && direction == 'smaller') {
                      text = text.substr(7);
                  } else if (currHeadingLevel == 1 && direction == 'bigger') {
                      text = text.substr(2);
                  } else {
                      if (direction == 'bigger') {
                          text = text.substr(1);
                      } else {
                          text = '#' + text;
                      }
                  }
              } else {
                  if (size == 1) {
                      if (currHeadingLevel <= 0) {
                          text = '# ' + text;
                      } else if (currHeadingLevel == size) {
                          text = text.substr(currHeadingLevel + 1);
                      } else {
                          text = '# ' + text.substr(currHeadingLevel + 1);
                      }
                  } else if (size == 2) {
                      if (currHeadingLevel <= 0) {
                          text = '## ' + text;
                      } else if (currHeadingLevel == size) {
                          text = text.substr(currHeadingLevel + 1);
                      } else {
                          text = '## ' + text.substr(currHeadingLevel + 1);
                      }
                  } else if (size == 3) {
                    if (currHeadingLevel <= 0) {
                        text = '### ' + text;
                    } else if (currHeadingLevel == size) {
                        text = text.substr(currHeadingLevel + 1);
                    } else {
                        text = '### ' + text.substr(currHeadingLevel + 1);
                    }
                  } else {
                      if (currHeadingLevel <= 0) {
                          text = '#### ' + text;
                      } else if (currHeadingLevel == size) {
                          text = text.substr(currHeadingLevel + 1);
                      } else {
                          text = '#### ' + text.substr(currHeadingLevel + 1);
                      }
                  }
              }

              cm.replaceRange(text, {
                  line: i,
                  ch: 0,
              }, {
                  line: i,
                  ch: 99999999999999,
              });
          })(i);
      }
      cm.focus();
    }
  </script> 
  
</body>

</html>